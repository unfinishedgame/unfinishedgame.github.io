# VALUES
# RAM 0 is the y velocity.
# RAM 1 is the x position.
# RAM 2 is the y position.
# RAM 10 stores input.

# Called when the program starts
!start
	DLA 60
	SYS 0 Example_Program

	SAV 0 0
	SAV 1 1
	SAV 2 0

	LOD 0 0
	LOD 1 1
	LOD 2 2

	PLY music 1
!endspecial

:<drawBg
	LOD 4 4
	ROW $4 lightblue
	ADD 4 1
	>CMP 71 $4
END
:drawFloor
	ROW 69 green
	ROW 70 green
	ROW 71 green
END

:stopFloorCollision
	SAV 0 0
	LOD 0 0
	SUB 2 1
	LOD 2 2
	CMP $2 68 :stopFloorCollision
END
:applyGravity
	ADD 0 1
	LOD 0 0
	ADD 2 $0
	LOD 2 2
	CMP $2 68 :stopFloorCollision
END
:moveLeft
	SUB 1 1
	LOD 1 1
	CMP 0 $1 :bringIntoLeftBound
END
:moveRight
	ADD 1 1
	SUB 1 64
	LOD 1 1
	CMP $1 63 :bringIntoRightBound
	ADD 1 64
	LOD 1 1
END
:bringIntoLeftBound
	SAV 1 0
	LOD 1 1
END
:bringIntoRightBound
	SAV 1 63
	LOD 1 1
END

:goUp
	JMP $2 68 :jump
END
:jump
	SAV 0 -5
	LOD 0 0
	PLY jump 0
END

# Called every frame by the system
!update
	SAV 3 -64
	SAV 4 0
	JMP 0 0 :<drawBg
	JMP 0 0 :drawFloor

	BTN 10 1
	LOD 10 10
	JMP $10 1 :moveLeft
	BTN 10 3
	LOD 10 10
	JMP $10 1 :moveRight
	BTN 10 0
	LOD 10 10
	JMP $10 1 :goUp
	JMP 0 0 :applyGravity
	VID $1 $2 black
!endspecial


# Initizalizes audio to play
!audio music
	/volume 0.5
	square 0 659.25 0 0.25
	square 0 622.25 0.25 0.25
	square 0 659.25 0.5 0.25
	square 0 622.25 0.75 0.25
	square 0 659.25 1 0.25
	square 0 493.88 1.25 0.25
	square 0 587.33 1.5 0.25
	square 0 523.25 1.75 0.25

	square 0 440 2 0.5
	square 0 110 2 0.25
	square 0 164.81 2.25 0.25
	square 0 220 2.5 0.25
	square 0 261.63 2.75 0.25
	square 0 329.63 3 0.25
	square 0 440 3.25 0.25

	square 0 493.88 3.5 0.5
	square 0 82.41 3.5 0.25
	square 0 164.81 3.75 0.25
	square 0 207.65 4 0.25
	square 0 329.63 4.25 0.25
	square 0 415.3 4.5 0.25
	square 0 493.88 4.75 0.25

	square 0 523.25 5 0.5
	square 0 110 5 0.25
	square 0 164.81 5.25 0.25
	square 0 220 5.5 0.25
	square 0 329.63 5.75 0.25
!endspecial

!audio jump
	/volume 2
	sine 1 500 0 0.125
!endspecial
